/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oop_grp_assignment;

import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class staff_payment extends javax.swing.JFrame {

    private String staffname;
    private String tpNum;
    private String Password;
    private String email;
    private String contact;
    public staff_payment() {
        initComponents();
    }

    public staff_payment(String staffName, String tpNum, String Password, String email, String contact) {
        initComponents();
        this.staffname = staffName;
        this.tpNum = tpNum;
        this.Password = Password;
        this.email = email;
        this.contact = contact;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        ap_back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tpNumber = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Month = new javax.swing.JComboBox<>();
        Proceed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(80, 118, 135));

        jPanel2.setBackground(new java.awt.Color(56, 75, 112));
        jPanel2.setPreferredSize(new java.awt.Dimension(92, 52));

        ap_back.setText("Back");
        ap_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ap_backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(ap_back)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(ap_back)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel1.setText("TP Number:");

        jLabel2.setText("Month:");

        Month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "September", "October", "November", "December" }));

        Proceed.setText("Proceed");
        Proceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProceedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(166, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Proceed)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tpNumber)
                            .addComponent(Month, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(163, 163, 163))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tpNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Proceed)
                .addGap(0, 115, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ap_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ap_backActionPerformed
        Main_pageStaff mp = new Main_pageStaff(staffname, tpNum, Password, email, contact);
        mp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ap_backActionPerformed

    private void ProceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProceedActionPerformed
        String TPNuminTextField = tpNumber.getText();  
        String month = (String) Month.getSelectedItem();
        
        String name = "";
        String tpNumInFile = "";
        String roomType = "";
        String roomNum = "";
        String registrationDate = "";
        boolean paymentFound = false;
        boolean userFound = false;
        
        try{
            FileReader fr = new FileReader("userPayment.txt");
            Scanner reader = new Scanner(fr);
            reader.useDelimiter("[:\n]");
            
            while (reader.hasNextLine()) {
            String line = reader.nextLine().trim();  
            
                if (line.equals("-----------------------------------") || line.trim().isEmpty()) {
                    continue;  
                }
            
                if (line.contains(":")) { 
                    String[] parts = line.split(":"); 
                    if (parts.length == 2) {
                        String key = parts[0].trim();
                        String value = parts[1].trim();

                        switch (key) {
                            case "residentName":
                                name = value;
                                break;
                            case "TP Num":
                                tpNumInFile = value;
                                System.out.println("Input TP Number: " + TPNuminTextField.trim());
                                System.out.println("File TP Number: " + tpNumInFile.trim());
                                if (tpNumInFile.trim().equals(TPNuminTextField.trim())) {
                                    userFound = true; // User found
                                    System.out.println("User found for TP Number: " + TPNuminTextField.trim());
                                }
                                break;
                            case "Room Type":
                                roomType = value;
                                break;
                            case "Room No":
                                roomNum = value;
                                break;
                            case "Registration Date":
                                registrationDate = value;
                                break;
                        }

                    }

                }

                if(line.contains("Payments:")){
                    paymentFound = true;
                    continue;
                }

                if(userFound && paymentFound){
                    
                    String[] lines = line.split(":",2);
                    if(lines.length == 2){
                        String[] defaultMonth = lines[0].trim().split(" ");
                        String[] amountLine = lines[1].trim().split(" ");
                            
                        System.out.println(Arrays.toString(amountLine)); //debuging
                        System.out.println("Status: " + amountLine[0]); //debuging
                        
                        if(defaultMonth[0].equalsIgnoreCase(month)){
                            
                            if(amountLine.length >= 2){
                                String status = amountLine[1].trim();
                                if(status.equals("[NOT_APPLICABLE]")){
                                    JOptionPane.showMessageDialog(this, "Selected Month is not Applicable!");
                                    break;
                                }
                                if(amountLine.length >= 4){
                                    
                                String amountInString = amountLine[0].trim();
                                String methodInString = amountLine[2].trim();
                                    if(methodInString.equals("[None]")){
                                        System.out.println("reach amount line");
                                        try{
                                            System.out.println("total amount added = "+ amountInString);
                                            staff_payment2 ap2 = new staff_payment2(staffname, tpNum, Password, email, contact,tpNumInFile, name, month, amountInString, roomType, roomNum, registrationDate);
                                            ap2.setVisible(true);
                                            this.dispose();
                                            break;

                                        }catch(NumberFormatException error){
                                            System.out.println("Error in converting String to Integer!");
                                        }  
                                    }else{
                                        JOptionPane.showMessageDialog(this, "Current Selected Month already has been Paid!");
                                        break;
                                    }
                                
                                }
                                
                            }    
                              
                        }
                    }
                }
            }
            
            if (!userFound) {
                JOptionPane.showMessageDialog(null, "User not found for TP Number: " + TPNuminTextField);
                return;  
            }

            if (!paymentFound) {
                JOptionPane.showMessageDialog(null, "Payments not found for the user.");
                return;  
            }
            
            
            
        }catch (IOException e) {
            System.out.println("An error occurred while reading the file: " + e.getMessage());
        }
    }//GEN-LAST:event_ProceedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(staff_payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(staff_payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(staff_payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(staff_payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new staff_payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Month;
    private javax.swing.JButton Proceed;
    private javax.swing.JButton ap_back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField tpNumber;
    // End of variables declaration//GEN-END:variables
}
