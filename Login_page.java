/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oop_grp_assignment;

import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import javax.swing.JOptionPane;


public class Login_page extends javax.swing.JFrame {

    /**
     * Creates new form Login_page
     */
    public Login_page() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tp_main = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        password_main = new javax.swing.JPasswordField();
        signUpButton = new javax.swing.JButton();
        loginButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(252, 250, 238));

        jPanel1.setBackground(new java.awt.Color(56, 75, 112));

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("APU Hostel Payment System");

        jPanel2.setBackground(new java.awt.Color(252, 250, 238));

        tp_main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tp_mainActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel1.setText("TP Number:");

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel2.setText("Password:");

        password_main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                password_mainActionPerformed(evt);
            }
        });

        signUpButton.setText("Signup");
        signUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpButtonActionPerformed(evt);
            }
        });

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tp_main, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(password_main))
                .addGap(63, 63, 63))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(signUpButton)
                .addGap(18, 18, 18)
                .addComponent(loginButton)
                .addGap(42, 42, 42))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tp_main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(password_main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signUpButton)
                    .addComponent(loginButton))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oop_grp_assignment/apu (4).png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 65, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(85, 85, 85))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel5)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(67, 67, 67)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tp_mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tp_mainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tp_mainActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
    String tpNumber = tp_main.getText().trim();  // Get the TP number from the text field
    String password = password_main.getText().trim();  // Get the password from the text field
    String name = "";
    String tpNum = "";
    String pw = "";
    String rePassword = "";
    String contact = "";
    String eContact = "";
    String email = "";
    String dateBirth = "";
    String address = "";
    String country = "";
    String roomType = "";
    String roomNo = "";  
    String referenceNum = "";

    try {
        boolean validUser = false;

        
        FileReader frManager = new FileReader("managerInfo.txt");
        Scanner managerReader = new Scanner(frManager);
        managerReader.useDelimiter("[:\n]");
        boolean isManager = false;
        boolean isUser = false; 
        String managerName = "";

        while (managerReader.hasNextLine()) {
            String line = managerReader.nextLine().trim();
            System.out.println("Line from manager file: " + line); 

            if (line.contains(":")) {
                String[] parts = line.split(":", 2);
                if (parts.length == 2) {
                    String key = parts[0].trim();
                    String value = parts[1].trim();

                    switch (key) {
                    case "managerName":
                        managerName = value;
                        break;
                    case "tpNum":
                        tpNum = value;
                        break;
                    case "password":
                        pw = value;
                        break;
                    case "email":
                        email = value;
                        break;
                    }
                }
            }
        }

        
        if (tpNumber.equalsIgnoreCase(tpNum) && password.equals(pw)) {
            isManager = true;
            JOptionPane.showMessageDialog(null, "Manager Login Successfully!");

            
            Main_pageManager mp = new Main_pageManager(managerName, tpNum, password, email);
            mp.setVisible(true);
            this.dispose(); 
            return;  
        }

        managerReader.close();

        
        if (!isManager) {
            
            FileReader fr = new FileReader("residentInfo.txt");
            Scanner reader = new Scanner(fr);
            reader.useDelimiter("[:\n]");

            while (reader.hasNextLine()) {
                String line = reader.nextLine().trim();
                System.out.println("Line from user file: " + line); 

                if (line.contains(":")) {
                    String[] parts = line.split(":", 2);
                    if (parts.length == 2) {
                        String key = parts[0].trim();
                        String value = parts[1].trim();

                        
                        switch (key) {
                            case "residentName":
                                name = value;
                                break;
                            case "tpNum":
                                tpNum = value;
                                break;
                            case "password":
                                pw = value;
                                break;
                            case "contact":
                                contact = value;
                                break;
                            case "eContact":
                                eContact = value;
                                break;
                            case "email":
                                email = value;
                                break;
                            case "birth":
                                dateBirth = value;
                                break;
                            case "address":
                                address = value;
                                break;
                            case "country":
                                country = value;
                                break;
                            case "roomType":
                                roomType = value;
                                break;
                            case "referenceNum":
                                referenceNum = value;
                                break;
                        }
                    }
                } else if (line.trim().isEmpty() || line.startsWith("----")) {
                    
                    if (tpNumber.equalsIgnoreCase(tpNum) && password.equals(pw)) {
                        validUser = true;
                        JOptionPane.showMessageDialog(null, "Login Successfully!");

                        FileReader frPayment = new FileReader("userPayment.txt");
                        Scanner paymentReader = new Scanner(frPayment);
                        paymentReader.useDelimiter("[:\n]");

                        boolean foundPaymentInfo = false;
                        while (paymentReader.hasNextLine()) {
                            String paymentLine = paymentReader.nextLine().trim();
                            System.out.println("Line from payment file: " + paymentLine); 

                            if (paymentLine.contains("TP Num: " + tpNumber.trim())) {
                                foundPaymentInfo = true;
                                System.out.println("Found matching TP Number in payment file: " + tpNumber);

                                while (paymentReader.hasNextLine()) {
                                    String lineInsidePayment = paymentReader.nextLine().trim();
                                    System.out.println("Inspecting Payment Detail Line: " + lineInsidePayment); 

                                    if (lineInsidePayment.startsWith("Room No:")) {
                                        roomNo = lineInsidePayment.split(":")[1].trim();  
                                        System.out.println("Found Room No: " + roomNo);  
                                    }
                                    if (lineInsidePayment.startsWith("Room Type:")) {
                                        roomType = lineInsidePayment.split(":")[1].trim();  
                                        System.out.println("Found Room Type: " + roomType);  
                                    }

                                    
                                    if (!roomNo.isEmpty() && !roomType.isEmpty()) {
                                        break;  
                                    }
                                }
                                break;  
                            }
                        }
                        paymentReader.close();

                        
                        if (!foundPaymentInfo) {
                            System.out.println("Payment information not found for this user.");
                        }

                        
                        System.out.println("Room Type: " + roomType + ", Room No: " + roomNo);
                        
                        isUser = true;
                        
                        
                        usermain_page mp = new usermain_page(name, tpNum, pw, rePassword, contact, eContact, email, dateBirth, address, country, roomType, referenceNum, roomNo);
                        mp.setVisible(true);
                        this.dispose();  
                        break;  
                    }
                }
            }
            reader.close();
            
            if(!isUser){ 
                
            }else if (!validUser) {
                JOptionPane.showMessageDialog(null, "Invalid TP Number or Password.");
            }
            
            
        }
        
        if(!isUser){
            FileReader fr = new FileReader("txtStaffInfo.txt");
            Scanner reader = new Scanner(fr);
            reader.useDelimiter("[:\n]");
            String staffname="";
            
            boolean valid_User = false;
            
            while (reader.hasNextLine()) {
            String line = reader.nextLine();  
            
            if (line.contains(":")) { 
                String[] parts = line.split(":", 2); 
                if (parts.length == 2) {
                    String key = parts[0].trim();
                    String value = parts[1].trim();
                    
                    switch (key){
                        case "staffName":
                            staffname = value;
                            break;
                        case "tpNum":
                            tpNum = value;
                            break;
                        case "password":
                            pw = value;
                            break;
                        case "contact":
                            contact = value;
                            break;
                        case "email":
                            email = value;
                            break;
                    }
                }
            } else if (line.trim().isEmpty() || line.startsWith("----")) {

                if (tpNumber.equals(tpNum) && password.equals(pw)) {
                    valid_User = true; 
                    JOptionPane.showMessageDialog(this, "Login Successfully!");
                    Main_pageStaff mp = new Main_pageStaff(staffname,tpNum,pw,email,contact);
                    mp.setVisible(true);
                    this.dispose();
                    break;
                }

            }
        }
        
        if (!valid_User) {
            JOptionPane.showMessageDialog(this, "Invalid TP Number or Password.");
        }
        
        reader.close();
        }

    } catch (IOException e) {
        System.out.println("An error occurred while reading the file: " + e.getMessage());
        e.printStackTrace();
    }


    }//GEN-LAST:event_loginButtonActionPerformed
    
    
    
    private void signUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpButtonActionPerformed
        Signup_page sp = new Signup_page();
        sp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_signUpButtonActionPerformed

    private void password_mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_password_mainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_password_mainActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login_page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField password_main;
    private javax.swing.JButton signUpButton;
    private javax.swing.JTextField tp_main;
    // End of variables declaration//GEN-END:variables
}
